<%- layout("./layouts/patientboilerplate") %>

<style>
    body { background-color: #f8f9fa; }
    
    .appointment-form-container {
        max-width: 100%;
        background: white;
        padding: 20px;
        border-radius: 10px;
        box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);
    }

    .form-header {
        font-size: 22px;
        font-weight: bold;
        display: flex;
        align-items: center;
        gap: 10px;
    }

    .form-group {
        margin-bottom: 15px;
    }

    label {
        font-weight: bold;
        display: block;
        margin-bottom: 5px;
    }

    input, select, textarea {
        width: 100%;
        padding: 10px;
        border: 1px solid #ccc;
        border-radius: 5px;
    }

    .success-message {
        text-align: center;
        color: green;
        font-weight: bold;
        margin-top: 10px;
    }
</style>

<div class="container">
    <div class="form-header">
        <h2>Book an Appointment</h2>
    </div>
    <div class="appointment-form-container my-3">
        <form id="appointmentForm" action="/patient/bookappointment" method="POST" enctype="application/x-www-form-urlencoded" class="needs-validation" novalidate>
            <div class="row">
                <div class="col-md-6 mb-2">
                    <label class="form-label">First Name</label>
                    <input type="text" name="patient[firstName]" class="form-control" required>
                    <div class="invalid-feedback">First name is required.</div>
                </div>
        
                <div class="col-md-6 mb-2">
                    <label class="form-label">Last Name</label>
                    <input type="text" name="patient[lastName]" class="form-control" required>
                    <div class="invalid-feedback">Last name is required.</div>
                </div>
            </div>
        
            <div class="row">
                <div class="col-md-6 mb-2">
                    <label class="form-label">Gender</label>
                    <select name="patient[gender]" class="form-select" required>
                        <option value="" selected disabled>Select a gender</option>
                        <option value="male">Male</option>
                        <option value="female">Female</option>
                        <option value="other">Other</option>
                    </select>
                    <div class="invalid-feedback">Please select a gender.</div>
                </div>
        
                <div class="col-md-6 mb-2">
                    <label class="form-label">Mobile</label>
                    <input type="text" name="patient[mobile]" class="form-control" required pattern="^\d{10}$">
                    <div class="invalid-feedback">Enter a valid 10-digit mobile number.</div>
                </div>
            </div>
        
            <div class="mb-2">
                <label class="form-label">Email</label>
                <input type="email" name="patient[email]" class="form-control" required>
                <div class="invalid-feedback">Please enter a valid email.</div>
            </div>
        
            <div class="mb-2">
                <label class="form-label">Select Doctor</label>
                <select name="patient[doctorId]" class="form-select" required>  
                        <option value="<%= doctor._id %>"><%= doctor.username %></option>
                </select>
                <div class="invalid-feedback">Please select a doctor.</div>
            </div>
        
            <div class="mb-2">
                <label class="form-label">Appointment Date</label>
                <input type="date" name="patient[appointmentDate]" id="appointmentDate" class="form-control" required min="<%= new Date().toISOString().split('T')[0] %>">
                <div class="invalid-feedback">Please select a date.</div>
                <small class="form-text text-muted">Available time slots will update based on your selected date.</small>
            </div>
        
            <div class="mb-2">
                <label class="form-label">Time Slot</label>
                <select name="patient[timeSlot]" id="timeSlotSelect" class="form-select" required>
                    <option value="" selected disabled>Select a date first to see available slots</option>
                </select>
                <div class="invalid-feedback">Please choose a time slot.</div>
                <small class="form-text text-muted">Only time slots available on the selected date will be shown.</small>
            </div>
        
            <div class="mb-2">
                <label class="form-label">Reason/Condition</label>
                <textarea name="patient[reason]" class="form-control" rows="3" required></textarea>
                <div class="invalid-feedback">Please Enter Valid Reason</div>
            </div>
        
            <button class="btn btn-primary" type="submit">Book Appointment</button>
        </form>        
    </div>
</div>

<!-- Bootstrap Form Validation Script -->
<script>
    document.addEventListener("DOMContentLoaded", function () {
        const form = document.getElementById("appointmentForm");
        form.addEventListener("submit", function (event) {
            if (!form.checkValidity()) {
                event.preventDefault();
                event.stopPropagation();
            }
            form.classList.add("was-validated");
        });
    });
</script>

<!-- Dynamic Time Slot Update Script -->
<script>
    // Doctor availability data from the server
    const doctorAvailability = <%- JSON.stringify(doctor.availabilitySlots || []) %>;
    
    document.addEventListener("DOMContentLoaded", function() {
        const dateInput = document.getElementById("appointmentDate");
        const timeSlotSelect = document.getElementById("timeSlotSelect");
        
        // Set initial date to today
        const today = new Date().toISOString().split('T')[0];
        dateInput.value = today;
        
        // Update time slots when date changes
        dateInput.addEventListener("change", updateTimeSlots);
        
        // Initial update
        updateTimeSlots();
        
        function updateTimeSlots() {
            const selectedDate = new Date(dateInput.value);
            const days = ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'];
            const dayOfWeek = days[selectedDate.getDay()];
            
            // Clear existing options
            timeSlotSelect.innerHTML = '<option value="" selected disabled>Select a time slot</option>';
            
            if (!doctorAvailability || doctorAvailability.length === 0) {
                timeSlotSelect.innerHTML = '<option value="" disabled>Doctor has not set availability yet</option>';
                return;
            }
            
            // Filter slots for the selected day
            var daySlots = [];
            for (var i = 0; i < doctorAvailability.length; i++) {
                if (doctorAvailability[i].day === dayOfWeek) {
                    daySlots.push(doctorAvailability[i]);
                }
            }
            
            if (daySlots.length === 0) {
                timeSlotSelect.innerHTML = '<option value="" disabled>No available slots for ' + dayOfWeek + '</option>';
                return;
            }
            
            // Add available slots
            for (var j = 0; j < daySlots.length; j++) {
                var slot = daySlots[j];
                var option = document.createElement('option');
                option.value = slot.startTime + '-' + slot.endTime;
                option.textContent = slot.startTime + ' - ' + slot.endTime + ' (' + slot.slotDuration + ' min)';
                timeSlotSelect.appendChild(option);
            }
        }
    });
</script>
