<%- layout('./layouts/doctorboilerplate') %>

<style>
    .dashboard-container {
        padding: 20px;
        color: #333;
        font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
        
    }

    .dashboard-header h2 {
        font-size: 28px;
        font-weight: 600;
        margin-bottom: 15px;
    }

    .welcome-card {
        background: linear-gradient(135deg, #f0f4ff, #ffffff);
        padding: 25px;
        border-radius: 15px;
        display: flex;
        align-items: center;
        box-shadow: 0 6px 12px rgba(0, 0, 0, 0.1);
        margin-bottom: 20px;
        transition: transform 0.2s ease;
        z-index: 1; /* keep below sidebar */
        position: relative;
    }

    .welcome-card:hover {
        transform: scale(1.01);
    }

    .welcome-content {
        display: flex;
        align-items: center;
        gap: 20px;
        flex-wrap: wrap;
    }

    .doctor-profile {
        width: 80px;
        height: 80px;
        border-radius: 50%;
        object-fit: cover;
    }

    .welcome-text h3 {
        font-weight: 600;
        color: #444;
        font-size: 20px;
        margin-bottom: 5px;
    }

    .doctor-name {
        color: #007bff;
        font-size: 22px;
        font-weight: 700;
    }

    .welcome-text p {
        font-size: 15px;
        color: #555;
        max-width: 600px;
        margin-top: 8px;
        line-height: 1.6;
    }

    .stats-grid {
        display: grid;
        grid-template-columns: repeat(4, 1fr);
        grid-template-rows: repeat(2, 1fr);
        gap: 20px;
        margin-bottom: 30px;
        max-width: 1600px;
        margin-left: auto;
        margin-right: auto;
        min-height: 340px;
    }

    .stats-grid .total-card {
        grid-column: 1 / 3;
        grid-row: 1;
    }

    .stats-grid .patients-card {
        grid-column: 3 / 5;
        grid-row: 1;
    }

    .stats-grid .pending-card {
        grid-column: 1;
        grid-row: 2;
    }

    .stats-grid .confirmed-card {
        grid-column: 2;
        grid-row: 2;
    }

    .stats-grid .completed-card {
        grid-column: 3;
        grid-row: 2;
    }

    .stats-grid .rejected-card {
        grid-column: 4;
        grid-row: 2;
    }

    .stats-grid .free-slots-card {
        display: none;
    }

    @media (max-width: 1200px) {
        .stats-grid {
            grid-template-columns: repeat(3, 1fr);
            grid-template-rows: repeat(3, 1fr);
        }
        
        .stats-grid .total-card {
            grid-column: 1 / 4;
            grid-row: 1;
        }

        .stats-grid .patients-card {
            grid-column: 1 / 4;
            grid-row: 2;
        }

        .stats-grid .pending-card {
            grid-column: 1;
            grid-row: 3;
        }

        .stats-grid .confirmed-card {
            grid-column: 2;
            grid-row: 3;
        }

        .stats-grid .completed-card {
            grid-column: 3;
            grid-row: 3;
        }

        .stats-grid .rejected-card {
            grid-column: 1 / 4;
            grid-row: 4;
        }

        .stats-grid .free-slots-card {
            display: block;
            grid-column: 1 / 4;
            grid-row: 5;
        }
    }

    @media (max-width: 768px) {
        .stats-grid {
            grid-template-columns: 1fr;
            grid-template-rows: auto;
        }
        
        .stats-grid .total-card,
        .stats-grid .patients-card,
        .stats-grid .pending-card,
        .stats-grid .confirmed-card,
        .stats-grid .completed-card,
        .stats-grid .rejected-card {
            grid-column: 1;
            grid-row: auto;
        }

        .stats-grid .free-slots-card {
            display: block;
            grid-column: 1;
            grid-row: auto;
        }
    }

    .stat-card {
        background: white;
        padding: 25px;
        border-radius: 12px;
        box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);
        text-align: center;
        border: 1px solid #e9ecef;
        transition: transform 0.2s ease, box-shadow 0.2s ease;
    }

    .stat-card:hover {
        transform: translateY(-2px);
        box-shadow: 0 4px 20px rgba(0, 0, 0, 0.15);
    }

    .stat-number {
        font-size: 2.5rem;
        font-weight: 700;
        color: #2c3e50;
        margin-bottom: 8px;
    }

    .stat-label {
        font-size: 0.95rem;
        color: #6c757d;
        font-weight: 500;
        text-transform: uppercase;
        letter-spacing: 0.5px;
    }

    /* Enhanced Dashboard Styles */
    .view-toggle-container {
        background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
        border-radius: 15px;
        padding: 25px;
        margin-bottom: 30px;
        box-shadow: 0 8px 25px rgba(102, 126, 234, 0.15);
    }

    .toggle-wrapper {
        display: flex;
        justify-content: space-between;
        align-items: center;
        flex-wrap: wrap;
        gap: 15px;
    }

    .toggle-title {
        color: white;
        font-weight: 600;
        margin: 0;
        font-size: 1.4rem;
    }

    .filter-controls {
        display: flex;
        flex-direction: column;
        gap: 15px;
    }

    .toggle-buttons {
        display: flex;
        flex-wrap: wrap;
        gap: 10px;
    }

    .toggle-buttons .btn {
        padding: 12px 20px;
        font-weight: 600;
        border-radius: 25px;
        transition: all 0.3s ease;
        border: 2px solid rgba(255, 255, 255, 0.3);
        flex: 1;
        min-width: 120px;
    }

    .toggle-buttons .btn-primary {
        background: white;
        color: #667eea;
        border-color: white;
    }

    .toggle-buttons .btn-outline-primary {
        background: transparent;
        color: white;
        border-color: rgba(255, 255, 255, 0.5);
    }

    .toggle-buttons .btn-outline-primary:hover {
        background: rgba(255, 255, 255, 0.1);
        border-color: white;
    }

    .custom-date-range {
        background: rgba(255, 255, 255, 0.1);
        padding: 20px;
        border-radius: 15px;
        backdrop-filter: blur(10px);
    }

    .custom-date-range .form-control {
        background: rgba(255, 255, 255, 0.9);
        border: 1px solid rgba(255, 255, 255, 0.3);
        border-radius: 8px;
    }

    .custom-date-range .form-label {
        font-weight: 500;
        margin-bottom: 5px;
    }

    .loading-overlay {
        position: absolute;
        top: 0;
        left: 0;
        right: 0;
        bottom: 0;
        background: rgba(255, 255, 255, 0.8);
        display: flex;
        align-items: center;
        justify-content: center;
        border-radius: 20px;
        z-index: 10;
    }

    .loading-spinner {
        width: 40px;
        height: 40px;
        border: 4px solid #f3f3f3;
        border-top: 4px solid #667eea;
        border-radius: 50%;
        animation: spin 1s linear infinite;
    }

    @keyframes spin {
        0% { transform: rotate(0deg); }
        100% { transform: rotate(360deg); }
    }

    .enhanced-stats-container {
        position: relative;
    }

    .enhanced-stats-container {
        margin-bottom: 40px;
    }

    .enhanced-stat-card {
        background: linear-gradient(145deg, #ffffff, #f8fafc);
        border-radius: 20px;
        padding: 28px 20px;
        box-shadow: 0 8px 32px rgba(0, 0, 0, 0.06), 0 2px 8px rgba(0, 0, 0, 0.04);
        border: 1px solid rgba(255, 255, 255, 0.8);
        transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
        position: relative;
        overflow: hidden;
        height: 140px;
        display: flex;
        flex-direction: column;
        justify-content: center;
        backdrop-filter: blur(20px);
    }

    .enhanced-stat-card:hover {
        transform: translateY(-8px) scale(1.02);
        box-shadow: 0 20px 60px rgba(0, 0, 0, 0.15);
    }

    .enhanced-stat-card::before {
        content: '';
        position: absolute;
        top: 0;
        left: 0;
        right: 0;
        height: 5px;
        background: linear-gradient(90deg, #667eea, #764ba2);
        border-radius: 24px 24px 0 0;
    }

    .stat-icon {
        width: 56px;
        height: 56px;
        border-radius: 18px;
        display: flex;
        align-items: center;
        justify-content: center;
        color: white;
        font-size: 22px;
        margin: 0 auto 16px;
        box-shadow: 0 8px 25px rgba(0, 0, 0, 0.15);
        transition: all 0.3s ease;
    }

    .enhanced-stat-card:hover .stat-icon {
        transform: scale(1.1);
        box-shadow: 0 12px 35px rgba(0, 0, 0, 0.25);
    }

    .stat-content {
        text-align: center;
    }

    .enhanced-stat-card .stat-number {
        font-size: 3.2rem;
        font-weight: 900;
        color: #2c3e50;
        margin-bottom: 6px;
        line-height: 1;
        background: linear-gradient(135deg, #2c3e50, #34495e);
        -webkit-background-clip: text;
        -webkit-text-fill-color: transparent;
        background-clip: text;
    }

    .enhanced-stat-card .stat-label {
        font-size: 0.95rem;
        color: #6c757d;
        font-weight: 600;
        margin: 0;
        text-transform: uppercase;
        letter-spacing: 0.5px;
        opacity: 0.8;
    }

    /* Card-specific colors */
    .total-card .stat-icon {
        background: linear-gradient(135deg, #667eea, #764ba2);
    }

    .pending-card .stat-icon {
        background: linear-gradient(135deg, #f093fb, #f5576c);
    }

    .confirmed-card .stat-icon {
        background: linear-gradient(135deg, #4facfe, #00f2fe);
    }

    .rejected-card .stat-icon {
        background: linear-gradient(135deg, #fa709a, #fee140);
    }

    .completed-card .stat-icon {
        background: linear-gradient(135deg, #28a745, #20c997);
    }

    .patients-card .stat-icon {
        background: linear-gradient(135deg, #a8edea, #fed6e3);
        color: #2c3e50 !important;
    }

    .free-slots-card .stat-icon {
        background: linear-gradient(135deg, #96fbc4, #f9f586);
        color: #2c3e50 !important;
    }

    /* Enhanced Action Card Styles */
    .enhanced-action-card {
        background: white;
        border-radius: 20px;
        padding: 30px;
        box-shadow: 0 8px 25px rgba(0, 0, 0, 0.08);
        border: 1px solid #f0f0f0;
        height: 100%;
    }

    .action-header {
        display: flex;
        align-items: center;
        gap: 12px;
        margin-bottom: 25px;
        padding-bottom: 15px;
        border-bottom: 2px solid #f8f9fa;
    }

    .action-icon {
        width: 45px;
        height: 45px;
        background: linear-gradient(135deg, #667eea, #764ba2);
        border-radius: 12px;
        display: flex;
        align-items: center;
        justify-content: center;
        color: white;
        font-size: 20px;
    }

    .action-title {
        color: #2c3e50;
        font-weight: 600;
        margin: 0;
        font-size: 1.3rem;
    }

    .action-buttons {
        display: flex;
        flex-direction: column;
        gap: 15px;
    }

    .enhanced-action-btn {
        display: flex;
        align-items: center;
        gap: 15px;
        padding: 20px;
        background: #f8f9fa;
        border: 2px solid transparent;
        border-radius: 15px;
        text-decoration: none;
        transition: all 0.3s ease;
        color: #2c3e50;
    }

    .enhanced-action-btn:hover {
        background: white;
        border-color: #667eea;
        transform: translateY(-2px);
        box-shadow: 0 8px 25px rgba(102, 126, 234, 0.15);
        color: #667eea;
        text-decoration: none;
    }

    .btn-icon {
        width: 50px;
        height: 50px;
        border-radius: 12px;
        display: flex;
        align-items: center;
        justify-content: center;
        font-size: 22px;
        color: white;
        flex-shrink: 0;
    }

    .availability-btn .btn-icon {
        background: linear-gradient(135deg, #4facfe, #00f2fe);
    }

    .appointments-btn .btn-icon {
        background: linear-gradient(135deg, #43e97b, #38f9d7);
    }

    .btn-content {
        flex: 1;
        text-align: left;
    }

    .btn-title {
        display: block;
        font-weight: 600;
        font-size: 1.1rem;
        margin-bottom: 4px;
    }

    .btn-subtitle {
        display: block;
        font-size: 0.9rem;
        color: #6c757d;
    }

    .btn-arrow {
        font-size: 18px;
        color: #6c757d;
        transition: transform 0.3s ease;
    }

    .enhanced-action-btn:hover .btn-arrow {
        transform: translateX(5px);
        color: #667eea;
    }

    /* Enhanced Details Card Styles */
    .enhanced-details-card {
        background: white;
        border-radius: 20px;
        padding: 30px;
        box-shadow: 0 8px 25px rgba(0, 0, 0, 0.08);
        border: 1px solid #f0f0f0;
        height: 100%;
    }

    .details-header {
        display: flex;
        align-items: center;
        gap: 12px;
        margin-bottom: 25px;
        padding-bottom: 15px;
        border-bottom: 2px solid #f8f9fa;
    }

    .details-icon {
        width: 45px;
        height: 45px;
        background: linear-gradient(135deg, #fa709a, #fee140);
        border-radius: 12px;
        display: flex;
        align-items: center;
        justify-content: center;
        color: white;
        font-size: 20px;
    }

    .details-title {
        color: #2c3e50;
        font-weight: 600;
        margin: 0;
        font-size: 1.3rem;
    }

    .details-grid {
        display: grid;
        gap: 15px;
    }

    .detail-item {
        display: flex;
        justify-content: space-between;
        align-items: center;
        padding: 12px 0;
        border-bottom: 1px solid #f1f3f4;
    }

    .detail-item:last-child {
        border-bottom: none;
    }

    .detail-label {
        font-weight: 600;
        color: #495057;
        font-size: 0.95rem;
    }

    .detail-value {
        color: #2c3e50;
        font-weight: 500;
        text-align: right;
    }

    @media (max-width: 768px) {
        .toggle-wrapper {
            flex-direction: column;
            text-align: center;
        }
        
        .enhanced-stat-card {
            padding: 20px;
        }
        
        .stat-icon {
            width: 50px;
            height: 50px;
            font-size: 20px;
        }
        
        .enhanced-stat-card .stat-number {
            font-size: 1.8rem;
        }

        .enhanced-action-card,
        .enhanced-details-card {
            padding: 20px;
        }

        .enhanced-action-btn {
            padding: 15px;
        }

        .btn-icon {
            width: 40px;
            height: 40px;
            font-size: 18px;
        }
    }

    .doctor-info h3 {
        font-size: 20px;
        font-weight: 600;
        margin-bottom: 15px;
    }

    .doctor-info ul {
        list-style: none;
        padding-left: 0;
    }

    .doctor-info li {
        font-size: 16px;
        margin-bottom: 10px;
        color: #444;
    }

    .doctor-info li strong {
        color: #222;
        display: inline-block;
        width: 150px;
    }

    @media screen and (max-width: 768px) {
        .welcome-card, .stats-container {
            flex-direction: column;
        }

        .welcome-content {
            flex-direction: column;
            align-items: flex-start;
        }

        .stat-card {
            width: 100%;
            
        }

        .doctor-info li strong {
            width: 120px;
        }
    }
</style>

<div class="dashboard-container container">
    <div class="dashboard-header">
        <h2>Dashboard</h2>
    </div>

    <div class="welcome-card">
        <div class="welcome-content">
            <img class="doctor-profile" src="<%=doctor.profile.url%>" alt="Doctor Profile">
            <div class="welcome-text">
                <h3>Welcome back</h3>
                <span class="doctor-name">Dr. <%= doctor.username %></span>
                <p>
                    Dedicated to providing the best healthcare services with <%= doctor.experience %> years of experience.
                </p>
            </div>
        </div>
    </div>

    <!-- Enhanced Filter Controls -->
    <div class="view-toggle-container mb-4">
        <div class="toggle-wrapper">
            <h4 class="toggle-title">Dashboard Statistics</h4>
            <div class="filter-controls">
                <div class="btn-group toggle-buttons" role="group">
                    <button type="button" class="btn btn-primary active" id="todayBtn" onclick="applyFilter('today')">
                        <i class="bi bi-calendar-day me-1"></i>Today
                    </button>
                    <button type="button" class="btn btn-outline-primary" id="weekBtn" onclick="applyFilter('week')">
                        <i class="bi bi-calendar-week me-1"></i>This Week
                    </button>
                    <button type="button" class="btn btn-outline-primary" id="monthBtn" onclick="applyFilter('month')">
                        <i class="bi bi-calendar-month me-1"></i>This Month
                    </button>
                    <button type="button" class="btn btn-outline-primary" id="customBtn" onclick="toggleCustomDateRange()">
                        <i class="bi bi-calendar-range me-1"></i>Custom Range
                    </button>
                </div>
                
                <!-- Custom Date Range Inputs -->
                <div class="custom-date-range mt-3" id="customDateRange" style="display: none;">
                    <div class="row g-2 align-items-end">
                        <div class="col-md-4">
                            <label for="startDate" class="form-label text-white">Start Date</label>
                            <input type="date" class="form-control" id="startDate">
                        </div>
                        <div class="col-md-4">
                            <label for="endDate" class="form-label text-white">End Date</label>
                            <input type="date" class="form-control" id="endDate">
                        </div>
                        <div class="col-md-4">
                            <button type="button" class="btn btn-light" onclick="applyCustomFilter()">
                                <i class="bi bi-search me-1"></i>Apply Filter
                            </button>
                            <button type="button" class="btn btn-outline-light ms-2" onclick="clearCustomFilter()">
                                <i class="bi bi-x-circle me-1"></i>Clear
                            </button>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- Enhanced Statistics Cards -->
    <div class="enhanced-stats-container">
        <div class="stats-grid">
            <!-- Row 1: Main Appointment Stats -->
            <div class="enhanced-stat-card total-card">
                <div class="stat-icon">
                    <i class="bi bi-calendar-check"></i>
                </div>
                <div class="stat-content">
                    <div class="stat-number" id="total-count"><%= todayCounts.total %></div>
                    <p class="stat-label">Total Appointments</p>
                </div>
            </div>

            <div class="enhanced-stat-card pending-card">
                <div class="stat-icon">
                    <i class="bi bi-clock-history"></i>
                </div>
                <div class="stat-content">
                    <div class="stat-number" id="pending-count"><%= todayCounts.pending %></div>
                    <p class="stat-label">Pending</p>
                </div>
            </div>

            <div class="enhanced-stat-card confirmed-card">
                <div class="stat-icon">
                    <i class="bi bi-check-circle-fill"></i>
                </div>
                <div class="stat-content">
                    <div class="stat-number" id="confirmed-count"><%= todayCounts.confirmed %></div>
                    <p class="stat-label">Confirmed</p>
                </div>
            </div>

            <!-- Row 2: Status & Completion -->
            <div class="enhanced-stat-card rejected-card">
                <div class="stat-icon">
                    <i class="bi bi-x-circle-fill"></i>
                </div>
                <div class="stat-content">
                    <div class="stat-number" id="rejected-count"><%= todayCounts.rejected %></div>
                    <p class="stat-label">Rejected</p>
                </div>
            </div>

            <div class="enhanced-stat-card completed-card">
                <div class="stat-icon">
                    <i class="bi bi-check-circle-fill"></i>
                </div>
                <div class="stat-content">
                    <div class="stat-number" id="completed-count"><%= todayCounts.completed %></div>
                    <p class="stat-label">Completed</p>
                </div>
            </div>

            <div class="enhanced-stat-card patients-card">
                <div class="stat-icon">
                    <i class="bi bi-people-fill"></i>
                </div>
                <div class="stat-content">
                    <div class="stat-number" id="patients-count"><%= todayCounts.patients %>+</div>
                    <p class="stat-label">Patients</p>
                </div>
            </div>

            <!-- Free Slots Card (hidden on desktop, shown on smaller screens) -->
            <div class="enhanced-stat-card free-slots-card">
                <div class="stat-icon">
                    <i class="bi bi-calendar-plus"></i>
                </div>
                <div class="stat-content">
                    <div class="stat-number" id="free-slots-count"><%= todayFreeSlots %></div>
                    <p class="stat-label">Free Slots</p>
                </div>
            </div>
        </div>
    </div>

    <!-- Enhanced Quick Actions and Details Section -->
    <div class="row g-4 mt-3">
        <div class="col-md-6">
            <div class="enhanced-action-card">
                <div class="action-header">
                    <div class="action-icon">
                        <i class="bi bi-lightning-charge"></i>
                    </div>
                    <h5 class="action-title">Quick Actions</h5>
                </div>
                <div class="action-buttons">
                    <a href="/doctor/availability" class="enhanced-action-btn availability-btn">
                        <div class="btn-icon">
                            <i class="bi bi-clock"></i>
                        </div>
                        <div class="btn-content">
                            <span class="btn-title">Manage Availability</span>
                            <span class="btn-subtitle">Set your time slots</span>
                        </div>
                        <i class="bi bi-arrow-right btn-arrow"></i>
                    </a>
                    <a href="/doctor/appointments" class="enhanced-action-btn appointments-btn">
                        <div class="btn-icon">
                            <i class="bi bi-calendar-check"></i>
                        </div>
                        <div class="btn-content">
                            <span class="btn-title">View Appointments</span>
                            <span class="btn-subtitle">Manage your schedule</span>
                        </div>
                        <i class="bi bi-arrow-right btn-arrow"></i>
                    </a>
                </div>
            </div>
        </div>
        <div class="col-md-6">
            <div class="enhanced-details-card">
                <div class="details-header">
                    <div class="details-icon">
                        <i class="bi bi-person-badge"></i>
                    </div>
                    <h5 class="details-title">Professional Details</h5>
                </div>
                <div class="details-grid">
                    <div class="detail-item">
                        <span class="detail-label">Specialization</span>
                        <span class="detail-value"><%= doctor.specialization %></span>
                    </div>
                    <div class="detail-item">
                        <span class="detail-label">Degree</span>
                        <span class="detail-value"><%= doctor.Degree %></span>
                    </div>
                    <div class="detail-item">
                        <span class="detail-label">Experience</span>
                        <span class="detail-value"><%= doctor.experience %> years</span>
                    </div>
                    <div class="detail-item">
                        <span class="detail-label">Hospital</span>
                        <span class="detail-value"><%= doctor.hospital %></span>
                    </div>
                    <div class="detail-item">
                        <span class="detail-label">Location</span>
                        <span class="detail-value"><%= doctor.location %></span>
                    </div>
                    <div class="detail-item">
                        <span class="detail-label">Country</span>
                        <span class="detail-value"><%= doctor.country %></span>
                    </div>
                    <div class="detail-item">
                        <span class="detail-label">Consultant Fees</span>
                        <span class="detail-value">₹<%= doctor.consultantFees %></span>
                    </div>
                    <div class="detail-item">
                        <span class="detail-label">Phone</span>
                        <span class="detail-value"><%= doctor.phone %></span>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <script>
        // Store the initial data from server
        const initialData = {
            today: {
                total: <%= todayCounts.total %>,
                pending: <%= todayCounts.pending %>,
                confirmed: <%= todayCounts.confirmed %>,
                rejected: <%= todayCounts.rejected %>,
                completed: <%= todayCounts.completed %>,
                patients: <%= todayCounts.patients %>,
                freeSlots: <%= todayFreeSlots %>
            },
            week: {
                total: <%= weekCounts.total %>,
                pending: <%= weekCounts.pending %>,
                confirmed: <%= weekCounts.confirmed %>,
                rejected: <%= weekCounts.rejected %>,
                completed: <%= weekCounts.completed %>,
                patients: <%= weekCounts.patients %>,
                freeSlots: <%= freeSlots %>
            }
        };

        let currentFilter = 'today';
        let isLoading = false;

        // Update button states
        function updateButtonStates(activeFilter) {
            const buttons = ['todayBtn', 'weekBtn', 'monthBtn', 'customBtn'];
            buttons.forEach(btnId => {
                const btn = document.getElementById(btnId);
                if (btnId === activeFilter + 'Btn') {
                    btn.classList.add('btn-primary', 'active');
                    btn.classList.remove('btn-outline-primary');
                } else {
                    btn.classList.add('btn-outline-primary');
                    btn.classList.remove('btn-primary', 'active');
                }
            });
        }

        // Update dashboard counts
        function updateCounts(data) {
            document.getElementById('total-count').textContent = data.total || 0;
            document.getElementById('pending-count').textContent = data.pending || 0;
            document.getElementById('confirmed-count').textContent = data.confirmed || 0;
            document.getElementById('rejected-count').textContent = data.rejected || 0;
            document.getElementById('completed-count').textContent = data.completed || 0;
            document.getElementById('patients-count').textContent = (data.patients || 0) + '+';
            document.getElementById('free-slots-count').textContent = data.freeSlots || 0;
        }

        // Show loading state
        function showLoading() {
            if (isLoading) return;
            isLoading = true;
            const statsContainer = document.querySelector('.enhanced-stats-container');
            const loadingOverlay = document.createElement('div');
            loadingOverlay.className = 'loading-overlay';
            loadingOverlay.innerHTML = '<div class="loading-spinner"></div>';
            statsContainer.appendChild(loadingOverlay);
        }

        // Hide loading state
        function hideLoading() {
            isLoading = false;
            const loadingOverlay = document.querySelector('.loading-overlay');
            if (loadingOverlay) {
                loadingOverlay.remove();
            }
        }

        // Fetch filtered appointment counts
        async function fetchAppointmentCounts(filter, startDate = null, endDate = null) {
            try {
                showLoading();
                
                let url = `/doctor/api/appointment-counts?filter=${filter}`;
                if (startDate && endDate) {
                    url += `&startDate=${startDate}&endDate=${endDate}`;
                }
                
                const response = await fetch(url);
                const result = await response.json();
                
                if (result.success) {
                    updateCounts(result.data);
                    currentFilter = filter;
                } else {
                    console.error('Error fetching appointment counts:', result.message);
                    alert('Error loading appointment data. Please try again.');
                }
            } catch (error) {
                console.error('Network error:', error);
                alert('Network error. Please check your connection and try again.');
            } finally {
                hideLoading();
            }
        }

        // Apply filter (Today, Week, Month)
        async function applyFilter(filter) {
            if (isLoading) return;
            
            // Hide custom date range if visible
            document.getElementById('customDateRange').style.display = 'none';
            
            // Always update button states first
            updateButtonStates(filter);
            
            // Use cached data for today and week if available
            if (filter === 'today' && initialData.today) {
                updateCounts(initialData.today);
                currentFilter = filter;
                return;
            }
            
            if (filter === 'week' && initialData.week) {
                updateCounts(initialData.week);
                currentFilter = filter;
                return;
            }
            
            // Fetch data for month or if cached data not available
            await fetchAppointmentCounts(filter);
        }

        // Toggle custom date range visibility
        function toggleCustomDateRange() {
            const customRange = document.getElementById('customDateRange');
            const isVisible = customRange.style.display !== 'none';
            
            if (isVisible) {
                customRange.style.display = 'none';
                // Revert to previous filter
                applyFilter(currentFilter);
            } else {
                customRange.style.display = 'block';
                updateButtonStates('custom');
                
                // Set default dates (last 30 days)
                const endDate = new Date();
                const startDate = new Date();
                startDate.setDate(endDate.getDate() - 30);
                
                document.getElementById('startDate').value = startDate.toISOString().split('T')[0];
                document.getElementById('endDate').value = endDate.toISOString().split('T')[0];
            }
        }

        // Apply custom date filter
        async function applyCustomFilter() {
            const startDate = document.getElementById('startDate').value;
            const endDate = document.getElementById('endDate').value;
            
            if (!startDate || !endDate) {
                alert('Please select both start and end dates.');
                return;
            }
            
            if (new Date(startDate) > new Date(endDate)) {
                alert('Start date cannot be after end date.');
                return;
            }
            
            await fetchAppointmentCounts('custom', startDate, endDate);
        }

        // Clear custom filter
        function clearCustomFilter() {
            document.getElementById('startDate').value = '';
            document.getElementById('endDate').value = '';
            document.getElementById('customDateRange').style.display = 'none';
            applyFilter('today');
        }

        // Initialize dashboard
        document.addEventListener('DOMContentLoaded', function() {
            // Set initial state
            updateCounts(initialData.today);
            updateButtonStates('today');
            currentFilter = 'today';
            
            // Debug log to check if data is loaded
            console.log('Dashboard initialized with data:', initialData);
        });
    </script>

<%- include("../includes/footer") %>
